{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Actions/Message.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Tile/EmptyTile.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","pinMessage","disableNotification","disable_notification","unpinMessage","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","item","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","hasAudio","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","controls","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","EmptyTile","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","lastCompleted","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.eafe9994.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', type, offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[p] GETCHATS stop', replace, type, result);\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isMediaContent\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\nimport StubMessage from './StubMessage';\nimport EmptyTile from '../Tile/EmptyTile';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.lastCompleted = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        // if (this.lastCompleted) return;\n\n        console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n        console.log('[p] getChatHistory result', fromMessageId, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n                // this.lastCompleted = true;\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading, this.completed]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}